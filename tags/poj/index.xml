<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>POJ on 在水异方</title>
    <link>/tags/poj/</link>
    <description>Recent content in POJ on 在水异方</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>©{year} 在水异方</copyright>
    <lastBuildDate>Fri, 18 Jul 2014 18:51:34 +0800</lastBuildDate>
    
	<atom:link href="/tags/poj/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>POJ 1017 Packets 悼念死去的模拟</title>
      <link>/post/csdn/poj-1017-packets-%E6%82%BC%E5%BF%B5%E6%AD%BB%E5%8E%BB%E7%9A%84%E6%A8%A1%E6%8B%9F/</link>
      <pubDate>Fri, 18 Jul 2014 18:51:34 +0800</pubDate>
      
      <guid>/post/csdn/poj-1017-packets-%E6%82%BC%E5%BF%B5%E6%AD%BB%E5%8E%BB%E7%9A%84%E6%A8%A1%E6%8B%9F/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 int s =a[6]+a[5]+a[4]; // a5 if (a[5]*11 &amp;amp;gt;= a[1]) a[1] = 0; else a[1] -= a[5]*11; // a4 for ( int i(1);i&amp;amp;lt;=a[4];i++){ t = push(20,2,5); if (t) t = push(t,1,t); } // a3 s += a[3] / 4; // 整装3 a[3] %= 4; if (a[3]){ // 剩下</description>
    </item>
    
    <item>
      <title>POJ 1273 Drainage Ditches 网络流模版</title>
      <link>/post/csdn/poj-1273-drainage-ditches-%E7%BD%91%E7%BB%9C%E6%B5%81%E6%A8%A1%E7%89%88/</link>
      <pubDate>Wed, 02 Apr 2014 22:57:45 +0800</pubDate>
      
      <guid>/post/csdn/poj-1273-drainage-ditches-%E7%BD%91%E7%BB%9C%E6%B5%81%E6%A8%A1%E7%89%88/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 struct EDGE { int to, cap, rev; }; vector&amp;lt;EDGE&amp;gt; g[N]; int ff[N][N]; bool used[N]; int n,m; int dfs(int v,int t,int f){ if ( v == t ) return f; used[v]= true; for ( int i(0); i &amp;lt; g[v].size(); i++){ EDGE &amp;amp;e = g[v][i]; if ( !used[e.to] &amp;amp;&amp;amp; e.cap &amp;gt; 0){</description>
    </item>
    
    <item>
      <title>POJ 3321 Apple Tree dfs序的应用</title>
      <link>/post/csdn/poj-3321-apple-tree-dfs%E5%BA%8F%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 31 Mar 2014 09:56:24 +0800</pubDate>
      
      <guid>/post/csdn/poj-3321-apple-tree-dfs%E5%BA%8F%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 void dfs(int v) { P1[v]=++tt; for ( int p = a[v].next; p; p=st[p].next ) dfs(st[p].v); P2[v]=tt; return; } inline int l(int i) { return i &amp;amp; -i; } void update(int x,int k) { while (x&amp;lt;=n) { t[x] += k; x += l(x); } } int gs(int x) { int s</description>
    </item>
    
    <item>
      <title>POJ 3461 Oulipo KMP练习</title>
      <link>/post/csdn/poj-3461-oulipo-kmp%E7%BB%83%E4%B9%A0/</link>
      <pubDate>Mon, 31 Mar 2014 09:34:47 +0800</pubDate>
      
      <guid>/post/csdn/poj-3461-oulipo-kmp%E7%BB%83%E4%B9%A0/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 void prekmp(char* b) { next[0]=-1; int j=-1; for ( int i(1); b[i]; i++) { while ( j!=-1 &amp;amp;&amp;amp; b[i]!=b[j+1]) j=next[j]; if ( b[i]==b[j+1] ) j++; next[i]=j; } } int kmp(char *a,char *b) { int j=-1,ans=0; for ( int i(0); a[i]; i++) { while ( j!=-1 &amp;amp;&amp;amp; a[i]!=b[j+1] ) j=next[j]; if</description>
    </item>
    
    <item>
      <title>POJ 3041 Asteroids 匈牙利算法 二分图最大匹配</title>
      <link>/post/csdn/poj-3041-asteroids-%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Fri, 15 Nov 2013 16:23:18 +0800</pubDate>
      
      <guid>/post/csdn/poj-3041-asteroids-%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 const int N = 555; int n, m, g[N][N], chk[N], match[N]; int dfs(int v){ int t; for ( int i = 1; i &amp;lt;= n; i++){ if ( g[i][v] &amp;amp;&amp;amp; !chk[i] ){ chk[i] = 1; t = match[i]; match[i] = v; if ( t == -1 || dfs(t) ) return</description>
    </item>
    
    <item>
      <title>POJ 1088 滑雪</title>
      <link>/post/csdn/poj-1088-%E6%BB%91%E9%9B%AA/</link>
      <pubDate>Sat, 23 Mar 2013 13:03:02 +0800</pubDate>
      
      <guid>/post/csdn/poj-1088-%E6%BB%91%E9%9B%AA/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。</description>
    </item>
    
    <item>
      <title>POJ 题目分类与计划</title>
      <link>/post/csdn/poj-%E9%A2%98%E7%9B%AE%E5%88%86%E7%B1%BB%E4%B8%8E%E8%AE%A1%E5%88%92/</link>
      <pubDate>Thu, 31 Jan 2013 14:41:53 +0800</pubDate>
      
      <guid>/post/csdn/poj-%E9%A2%98%E7%9B%AE%E5%88%86%E7%B1%BB%E4%B8%8E%E8%AE%A1%E5%88%92/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。</description>
    </item>
    
  </channel>
</rss>